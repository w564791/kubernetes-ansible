---
- name: Create the kubelet data directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ kubernetes_log_dir }}"
    - "{{ kubernetes_conf_dir }}"
    - "{{ kubernetes_bin_dir }}"
    - /var/lib/kubelet

- include: cert.yaml

- name: write the kubelet.kubeconfig(auth) file for kubelet
  temaplte:
    src: kubelet.kubeconfig
    dest: "{{ kubernetes_conf_dir }}/kubelet.kubeconfig"
    backup: yes
  notify: restart kubelet
- name: write the kube-proxy.kubeconfig(auth) file for kube-proxy
  temaplte:
    src: kube-peoxy.kubeconfig
    dest: "{{ kubernetes_conf_dir }}/kube-proxy.kubeconfig"
    backup: yes
  notify: restart kube-proxy
  

- name: Copy the binary file to node instance.
  get_url:
    url: "https://s3.cn-north-1.amazonaws.com.cn/k8s/ansible/node/{{ kubernetes_version }}/{{ item }}"
    dest: "{{ kubernetes_bin_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - kubelet
    - kube-proxy

- name: Create kubernets node Configuration file
  template:
    src: "{{ role_path  }}/templates/{{ item  }}"
    dest: "{{ kubernetes_conf_dir }}/{{ item  }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - kubelet
    - proxy
    - config
  register: change_kubelet_config

- name: Copy the systemd unit file to node
  template:
    src: "{{ role_path }}/templates/service/{{ item }}"
    dest: "/usr/lib/systemd/system/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - kubelet.service
    - kube-proxy.service
  register: change_kubelet_system

- name: start and enable node service
  when: change_kubelet_system|succeeded and change_kubelet_system|succeeded
  systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  with_items:
    - kubelet
    - kube-proxy
- name: reload node service
  when: change_kubelet_system|changed or change_kubelet_config|changed
  systemd:
    name: "{{ item  }}"
    state: restarted
    daemon_reload: true
  with_items:
    - kubelet
    - kube-proxy
